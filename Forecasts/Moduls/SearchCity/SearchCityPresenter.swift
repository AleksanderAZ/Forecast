//
//  SearchCityPresenter.swift
//  Forecasts
//
//  Created Z on 11/6/19.
//  Copyright © 2019 Zyma. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class SearchCityPresenter: SearchCityPresenterProtocol {

    weak private var view: SearchCityViewProtocol?
    var interactor: SearchCityInteractorProtocol?
    private let router: SearchCityWireframeProtocol
    var resultSearch: [CitySearchModel]?
    
    init(interface: SearchCityViewProtocol, interactor: SearchCityInteractorProtocol?, router: SearchCityWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func countCell()->Int {
        return resultSearch?.count ?? 0
    }

    func closeView(citySearch: CitySearchModel?) {
        router.closeView(citySearch: citySearch)
    }
    
    func updateSearch(resultSearch: [CitySearchModel]?) {
        self.resultSearch = resultSearch
        self.view?.update()
    }
    
    func searchData(searchStr: String) {
        self.interactor?.requestSearch(searchStr: searchStr)
    }
    
    func getNameCity(index: Int)->String {
        return resultSearch?[index].cityName ?? ""
    }
    
    func getCity(index: Int)->CitySearchModel? {
        return resultSearch?[index]
    }
}
