//
//  WeatherViewController.swift
//  Forecasts
//
//  Created Z on 11/5/19.
//  Copyright © 2019 Zyma. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import SafariServices

class WeatherViewController: UIViewController, WeatherViewProtocol {
    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!
    @IBOutlet weak var weatherTable: UITableView!
    @IBOutlet weak var cityLabel: UILabel!
    var refreshControl: UIRefreshControl!
    var presenter: WeatherPresenterProtocol?
    let cellIdentifier = [ "CurrentTempCell", "TimeForecastCell", "DayForecastCell", "AdditionInfoCell"]
    
    @IBAction func listActionButton(_ sender: UIButton) {
        presenter?.showCityView()
    }
    
    @IBAction func linkActionButton(_ sender: UIButton) {
        presenter?.openLinkSafary()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.setNavigationBarHidden(true, animated: false)
        if presenter?.getCityName() == "" {
            presenter?.showCityView()
        }
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        self.navigationController?.setNavigationBarHidden(false, animated: false)
        super.viewWillAppear(animated)
    }
    
	override func viewDidLoad() {
        super.viewDidLoad()
        
        self.navigationItem.title = ""
        self.navigationItem.leftBarButtonItem?.isEnabled = false
        weatherTable.delegate = self
        weatherTable.dataSource = self
        for item in cellIdentifier {
            weatherTable.register(UINib(nibName: item, bundle: nil), forCellReuseIdentifier: item)
        }
        weatherTable.separatorStyle = .none
        weatherTable.tableFooterView = UIView(frame: .zero)
        weatherTable.tableHeaderView = UIView(frame: .zero)
        
        
        refreshControl = UIRefreshControl()
        refreshControl.attributedTitle = NSAttributedString(string: " refresh...")
        refreshControl.addTarget(self, action: #selector(actionRefresh), for: UIControl.Event.valueChanged)
        weatherTable.addSubview(refreshControl)
    }
    
    @objc func actionRefresh() {
        presenter?.refreshForecasts()
        refreshControl.endRefreshing()
    }
    
    func update() {
        DispatchQueue.main.async {
            self.activityIndicator.stopAnimating()
            self.weatherTable.reloadData()
            let cityName = self.presenter?.getCityName() ?? ""
            self.cityLabel.text = cityName
            self.navigationItem.title = cityName
        }
    }
}

extension WeatherViewController: WeatherDelegate {
    func getForecasts(city: CityModel?) {
        self.presenter?.getForecasts(city: city)
    }
}

extension WeatherViewController:  UITableViewDataSource, UITableViewDelegate {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 4
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        let count = presenter?.countCell(section: section) ?? 0
        return count
    }
    
    func getIdentifier(section: Int)->String {
        return cellIdentifier[section]
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let identifier = getIdentifier(section: indexPath.section)
        let cell = tableView.dequeueReusableCell(withIdentifier: identifier, for: indexPath)
        if let cell = cell as? AdditionInfoCell{
            let text = self.presenter?.getAddInfo() ?? ""
            cell.configCell(text: text)
        }
        else if let cell = cell as? DayForecastCell {
            let day = self.presenter?.getDay(index: indexPath.row) ?? ""
            let cloud = self.presenter?.getDayCloud(index: indexPath.row) ?? ""
            let tempr = self.presenter?.getDayTempr(index: indexPath.row) ?? ""
            let icon = self.presenter?.getDayIcon(index: indexPath.row) ?? ""
            cell.configCell(day: day, cloud: cloud, tempr: tempr, icon: icon)
        }
        else if let cell = cell as? TimeForecastCell {
            cell.configCell(presenter: self.presenter)
        }
        else if let cell = cell as? CurrentTempCell {
            let tempr = self.presenter?.getCityTempr() ?? ""
            cell.configCell(tempr: tempr)
        }
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
}

extension WeatherViewController: SFSafariViewControllerDelegate {
    
}
